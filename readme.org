* install-build-config-run
*install packages and build*
npm install --save-dev npm@7.24.1
npm install --save-dev typescript
npm run build

*edit configs and dotenv*
- .env
  L2_WEB3_ENDPOINTS=http://127.0.0.1:8545
  # secrets
  PRIVATE_KEY=blah


- src/configs/config.json

- mute noise BotService and PerpService
cp mylibs/BotService.js node_modules/@perp/common/build/lib/perp/BotService.js
cp mylibs/BotService.js node_modules/@perp/common/build/lib/eth/EthService.js

*execute*
env $(cat .env | grep -v '#' | xargs) npm run start



** run from debugger
launch.json
------------
{
      "name": "set env",
      "type": "node",
      "request": "launch",
      "args": [
        "${workspaceRoot}/src/index.ts"
      ],
      "env":{
        "L2_WEB3_ENDPOINTS":"http://127.0.0.1:8545",
        "PRIVATE_KEY":"blah"
      },
      "runtimeArgs": [
        "--nolazy",
        "-r",
        "ts-node/register"
      ],

* hardhat environment setup
**setup hardhat fork**
- install hardhat in a local directory
  
> cd /Users/ayb/mio/code/tinker/dft/hh


- ensure using your own signer in local node
- hardhat.config.ts
------------------------
import { HardhatUserConfig } from 'hardhat/config';
import '@nomicfoundation/hardhat-toolbox';

export const BLOCK_NUMBER = 30306621;

const config: HardhatUserConfig = {
  solidity: {
    settings: {
      optimizer: {
        enabled: true,
        runs: 1000,
      },
    },
    compilers: [
      {
        version: '0.7.6',
      },
    ],
  },
  networks: {
    hardhat: {

accounts:[{privateKey:"blah",
balance:"10000000000000000000000"}],
      mining: {
        auto: true,
        mempool: {
          order: 'fifo',
        },
      },
    },
  },
};

export default config;

*run fork*
npx hardhat node --fork 
https://opt-mainnet.g.alchemy.com/v2/oH4_c4rONzDHSXUvSdFpuXAmgMpvsQIi  
--fork-block-number 30306622
* WORKFLOWS
** test changes to deploy
   - s [using live network] //in some cases may need to use hardhat
     - [X] use dot-env configuration
     - [ ] put debug breakpoints to avoid opening/closing

** deploy in DO   
- local
  - [ ] git commit src/arbitrageur/Arbitrageur.ts -m blah
  - [ ] git push origin qa

- DO    
  - [ ] git tag pre-holos; git tak //label befor you pull to be able to roll back
    - [ ] git checkout pre-holos to rollback
  - [ ] cp src/configs/config.json src/configs/bkp.config.jsonbkp copyof config.json
  - [ ] DO: git pull

*** debuger-hardhat testing
- s
  - [ ] scenario: SOLshort at 65131100
    - [ ] pair: (0x7Ca51ce88195eD6a2C7289DD1B286a713fbD806b,
    - [ ] uret:.0.7358
    - [ ] sz: 2.5272575239729007
  - [ ] trigger onLoss, onScale by chaning MIN_RET/MAX_RET 96/95
  - [ ] hardhat supports only one signer. use 'bypass dotenv' debug config using only one
  - [ ] config turn false everything xcept solshort

    /Users/ayb/mio/code/tinker/dft/hh
*** qa testing
- i
  - [ ] use single name, low lev but high sensitivity  e.g .98, 1.02 to force logic at low cost
** push to a new branch e.g spi
   - on local
     - [ ] git branch ; make sure u r in spi branch [git branch;
     - [ ] git checkout spi ; if not there]
     - [ ] push: git push origin spi

   - on remote
     - [ ] git fetch to pull the branch
     - [ ] git checkout spi
     - [ ] git branch ;to make sure on rite branch
     - [ ] git pull origin spi
* GOTCHAS

** debugger acting weird
- prob: e.g disappering or breaking in wrong place. 
- remedy: delete all breakpoints and set again. stop debugger. save and restart

** hardhat limitations
- hardhat use only one signer (first account on the config) can only test one market
at a time

** Agujeros-Accel
*** agujero: dont monkey stack. after one xts ask
    what am i trying to do
    how to do diff
*** accel: use conditional breakpoint
    
